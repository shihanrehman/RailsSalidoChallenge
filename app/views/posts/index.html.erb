<p id="notice"><%= notice %></p>

<h1>Listing Wines</h1>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Price</th>
      <th>Quantity</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @posts.each do |post| %>
      <tr>
        <td><%= post.name %></td>
        <td><%= post.price %></td>
        <td><%= post.quantity %></td>
        <td><%= link_to 'Show', post %></td>
        <td><%= link_to 'Edit', edit_post_path(post) %></td>
        <td><%= link_to 'Destroy', post, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'Add a new Wine', new_post_path %>

<p>
  
namespace :scraper do
  desc "Fetch Wines from the wine API"
  task scrape: :environment do
  require 'open-uri'
  require 'json'

  #http://services.wine.com/api/beta2/service.svc/JSON/catalog?filter=product&apikey=b83910c31344dbe67a1b501d8ccd5bf7
  # Set API token and URL
  apikey = "b83910c31344dbe67a1b501d8ccd5bf7"
  polling_url = "http://services.wine.com/api/beta2/service.svc/JSON/catalog?filter=product&"

  #Specify request parameters

  params = {
    apikey: apikey
  }

  #Prepare API request
  uri = URI.parse(polling_url)
  uri.query = URI.encode_www_form(params)

  #Submit request

  result = JSON.parse(open(uri).read)

  # Display results to screen
  puts result["Products"]["List"].first["Name"]

  #Store results in database
  result["Products"]["List"].each do |posting|
    #Create new post
    @post = Post.new
    @post.name = posting["Name"]
    @post.save
  end
  end

  desc "TODO"
  task destroy_all_posts: :environment do
  end

end

</p>